/*
Объясните почему код даёт именно такие результаты?
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // 2
d = b++;
alert(d); // 1
c = 2 + ++a;
alert(c); // 5
d = 2 + b++;
alert(d); // 4
alert(a); // 3
alert(b); // 3
*/

'use strict';

let a = 1, b = 1, c, d;
//операция ++a - это операция префикс-инкримента и
//она возвращает переменной C уже измененное значение D, тоесть 1+1.
c = ++a;
alert(c);
//операция b++ - это операция пост-инкримента и
//она возвращает переменной D не измененное значение B, тоесть 1,
//и изменяет перенную B только после выполнения операции
d = b++;
alert(d);
//операция ++a - это операция префикс-инкримента и
//она возвращает переменной C уже измененное значение A, тоесть 2 + 3(2+1).
c = 2 + ++a;
alert(c);
//операция b++ - это операция пост-инкримента и
//она возвращает переменной D не измененное значение B, тоесть 2,
//и изменяет перенную B только после выполнения операции = 2 + 2.
d = 2 + b++;
alert(d);
//оба значения равно 3, потому что все операции с A и B уже выполнены
alert(a);
alert(b);